@page
@model RazorPage.Pages.Booking.DetailsModel

@{
    ViewData["Title"] = "Booking Details";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">Booking Reservation Details</h1>

    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h4 class="m-0">Booking Reservation</h4>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BookingReservation.BookingDate)</dt>
                <dd class="col-sm-9">@Model.BookingReservation.BookingDate</dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BookingReservation.TotalPrice)</dt>
                <dd class="col-sm-9">@Model.BookingReservation.TotalPrice</dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BookingReservation.BookingStatus)</dt>
                <dd class="col-sm-9">
                    @{
                        string statusText;
                        string statusClass;
                        switch (Model.BookingReservation.BookingStatus)
                        {
                            case 0:
                                statusText = "Pending";
                                statusClass = "badge pending-label";
                                break;
                            case 1:
                                statusText = "Confirmed";
                                statusClass = "badge bg-success";
                                break;
                            default:
                                statusText = "Unknown";
                                statusClass = "badge bg-secondary";
                                break;
                        }
                    }
                    <span class="@statusClass">@statusText</span>
                </dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BookingReservation.Customer)</dt>
                <dd class="col-sm-9">@Model.BookingReservation.Customer.CustomerFullName</dd>
            </dl>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-secondary text-white">
            <h4 class="m-0">Booking Details</h4>
        </div>
        <div class="card-body p-0">
            <table class="table table-striped table-bordered m-0">
                <thead class="thead-dark">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.BookingReservation.BookingDetails.First().RoomId)</th>
                        <th>@Html.DisplayNameFor(model => model.BookingReservation.BookingDetails.First().StartDate)</th>
                        <th>@Html.DisplayNameFor(model => model.BookingReservation.BookingDetails.First().EndDate)</th>
                        <th>@Html.DisplayNameFor(model => model.BookingReservation.BookingDetails.First().ActualPrice)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var detail in Model.BookingReservation.BookingDetails)
                    {
                        <tr>
                            <td>@detail.RoomId</td>
                            <td>@detail.StartDate.ToString("MMMM dd, yyyy")</td>
                            <td>@detail.EndDate.ToString("MMMM dd, yyyy")</td>
                            <td>@detail.ActualPrice</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="text-center">
        <a asp-page="./History" class="btn btn-sm btn-primary">
            <i class="bi bi-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<style>
    .btn-primary {
        background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,121,174,1) 35%, rgba(0,212,255,1) 100%);
        border: none;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .btn-primary:hover {
            background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,121,174,1) 35%, rgba(0,212,255,1) 100%);
            transform: scale(1.05);
        }

        .btn-primary.btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }

    .card {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 0.75rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .card-header {
        border-radius: 0.75rem 0.75rem 0 0;
        background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,121,174,1) 35%, rgba(0,212,255,1) 100%);
    }

    .table {
        margin-top: 0;
        border-top: none;
    }

        .table th, .table td {
            vertical-align: middle;
            text-align: center;
        }

    .table-hover tbody tr:hover {
        background-color: #e9ecef;
        cursor: pointer;
    }

    .container {
        max-width: 1200px;
    }

    .badge {
        font-size: 0.9em;
        padding: 0.5em 0.75em;
        border-radius: 0.25rem;
        transition: all 0.3s ease;
    }

    .bg-warning {
        background-color: #ffc107 !important;
    }

    .bg-success {
        background-color: #28a745 !important;
    }

    .bg-secondary {
        background-color: #6c757d !important;
    }

    .pending-label {
        background-color: #ffc107;
        color: #212529;
        border: 1px solid #212529;
        border-radius: 0.25rem;
        font-weight: bold;
        padding: 0.5em 1em;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
    }

        .pending-label:hover {
            background-color: #e0a800;
            color: #ffffff;
            border-color: #ffffff;
        }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    });
</script>
